class Ping1D : public PingDevice
{
public:
    /**
     *  @brief Constructor
     *
     *  @param ser: The device I/O
     */
    Ping1D(Stream& ser);

    /**
     * @brief Destructor
     */
    ~Ping1D();

{% for msg in messages["set"] %}
    /**
     * @brief {{messages["set"][msg].description}}
     *
{% for field in messages["set"][msg].payload %}
     * @param {{field.name}} - {% if field.units %}Units: {{field.units}}; {% endif %}{{field.description}}
{% endfor %}
     *
     * @return when verify = false: true if a valid reply is received from the device.
     * @return when verify = true: true if a valid reply is received from the
     * device, and the values in the reply match the values that we applied
     */
    bool {{msg}}({% for field in messages["set"][msg].payload %}{{generator.get_type_string(field.type)}} {{field.name}}, {% endfor %}bool verify = true);

{% endfor %}

{% set propnames=[] %}
{% set proplist=[] %}
{% for msg in messages["get"] %}
{% for field in messages["get"][msg].payload %}
{% if field.name not in propnames %}
{{ '' if propnames.append(field.name) -}}
{{ '' if proplist.append(field) -}}
{% endif %}
{% endfor %}
{% endfor %}

{% for field in proplist %}
    /**
     * Return the latest value received
     */
{% if generator.is_vector(field.type) %}
{% if field.vector.sizetype %}
    {{generator.get_type_string(field.vector.sizetype)}} {{field.name}}_length() { return _{{field.name}}_length; }
    /**
     * Return the latest value received
     */
    {{generator.get_type_string(field.vector.datatype)}}* {{field.name}}() { return _{{field.name}}; }
{% endif %}
{% else %}
    {{generator.get_type_string(field.type)}} {{field.name}}() { return _{{field.name}}; }
{% endif %}

{% endfor %}

private:
    // Device I/O
    Stream& _stream;

    // For decoding PingMessages from the device
    PingParser _parser;

    /**
     *  @brief Handle an incoming message from the device. Internal values are updated according to the device data.
     *
     *  @param pmsg: The message received from the device
     */
    void handleMessage(ping_message* pmsg) override;

{% for field in proplist %}
    // {{field.description}}
{% if generator.is_vector(field.type) %}
{% if field.vector.sizetype %}
    {{generator.get_type_string(field.vector.sizetype)}} _{{field.name}}_length = 0;
{% endif %}
    {{generator.get_type_string(field.vector.datatype)}}* _{{field.name}} = 0;
{% else %}
    {{generator.get_type_string(field.type)}} _{{field.name}} = 0;
{% endif %}

{% endfor %}
};
